# Nginx configuration template
# To generate and link config use follow commands:
#       $ ./bin/gen_nginx_config --template=../conf/nginx.conf --out=/etc/nginx/sites-available/YOUR_PROJECT_NAME.conf --config=../conf/nginx_conf.ini
#       $ ln -s /etc/nginx/sites-available/YOUR_PROJECT_NAME.conf /etc/nginx/sites-enabled/YOUR_PROJECT_NAME.conf
#       $ service nginx reload
#
# Config file must have follow format:
# ```
# [nginx]
# project=YOUR_PROJECT_NAME
# domain=YOUR_DOMAIN_NAME
# frontend_path=unix:/path/to/socket.sock
# static_path=/data/YOUR_PROJECT_NAME/static
# meida_path=/data/YOUR_PROJECT_NAME/media
# error_log=/var/log/YOUR_PROJECT_NAME/nginx_error.log
# access_log=/var/log/YOUR_PROJECT_NAME/nginx_access.log
# max_body_size=10M
# max_body_buffer_size=128K
# server_names_hash_bucket_size=128
# workers=4
# worker_connections=1024
# proxy_timeout=90
# proxy_buffers=32
# proxy_buffer_size=10k
# proxy_cache_path=/var/lib/nginx/cache
# proxy_cache_max_size=1G
# proxy_temp_path=/var/lib/nginx/proxy
# proxy_cache_flash_header=X-Flash-Cache
# gzip_types=text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript
# gzip_comp_level=5
# static_extensions_regexp=ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf
# ```

worker_processes %workers%;
events {
    worker_connections %worker_connections%;
}

http {
    include mime.types;

    default_type  application/octet-stream;

    sendfile          on;
    keepalive_timeout 65;

    log_format main '$remote_addr - $remote_user [$time_local] $status '
        '"$request" $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';
    error_log %error_log%;
    access_log %access_log% main;

    server_names_hash_bucket_size %server_names_hash_bucket_size%;

    # Proxy caching
    proxy_cache_path      %proxy_cache_path% levels=1:2 keys_zone=cache:30m max_size=%proxy_cache_max_size%;
    proxy_temp_path       %proxy_temp_path%;
    proxy_ignore_headers  Expires Cache-Control;
    proxy_cache_use_stale error timeout invalid_header http_502;
    proxy_cache_bypass    $cookie_session;
    proxy_no_cache        $cookie_session;

    # Header to flash cache
    proxy_cache_bypass $cookie_session %proxy_cache_flash_header%;

    upstream backend {
        server %backend_path%;
    }

    # Configuration of https-server
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        server_name     www.%domain% %domain%;
        charset         utf-8;
        gzip            on;
        gzip_static     on;
        gzip_types      %gzip_types%;
        gzip_disable    "msie6";
        gzip_comp_level %gzip_comp_level%;           

        root %public_path%;

        # Public files
        location /public {
            alias %public_path%;
        }

        # Loaded files
        location /media {
            alias %media_path%;
        }

        # Static files
        location /static {
            access_log off;
            alias %static_path%;
        }

        # API v1 proxy pass to backend
        location /v1 {
            include proxy_params;
            proxy_pass http://backend;
        }

        # Web sockets game proxy pass to backend
        location /game {
            include proxy_params;
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Cache all static files
        location ~* ^.+\.(%static_extensions_regexp%)$ {
            expires max;
        }

        # Other requests rendered with client JS
        location / {
            rewrite ^ /index.htm break;
        }
    }

    # Configuration of http-server
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name %domain% www.%domain%;
        return 301 https://$server_name$request_uri;
    }
}
